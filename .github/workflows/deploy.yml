name: Deploy Django Project

on:
  push:
    branches:
      - production  # Trigger deployment on push to the production branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.13'  # Specify your Python version

#    - name: Install dependencies    # this will be used on  containerized deployment
#      run: |
#        python -m pip install --upgrade pip
#        pip install -r requirements.txt

    - name: Deploy to server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        # Start SSH agent
        eval "$(ssh-agent -s)"
        echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

        # Deploy commands
        ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP -p 8922 << 'EOF'
          if pgrep -f "python manage.py startserver 8950" > /dev/null; then
              echo "Process is running, stopping it..."
              pkill -f "python manage.py startserver 8950"
          else
              echo "Process is not running."
          fi
          cd /opt/metaafzar
          python3 -m venv venv
          source venv/bin/activate  
          cd /opt/metaafzar/deploy  
          git pull origin production
          pip install -r requirements.txt
          python manage.py migrate
          python manage.py collectstatic --noinput
          python manage.py startserver 8930 &
        EOF
