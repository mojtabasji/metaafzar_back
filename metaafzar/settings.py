"""
Django settings for metaafzar project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from env import my_env

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = my_env.SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = my_env.DEBUG

ALLOWED_HOSTS = my_env.ALLOWED_HOSTS

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'my_scraper.authentication.CookieJWTAuthentication',
        # Other authentication classes can be added here
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
        'rest_framework.renderers.MultiPartRenderer',
    ),
}

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'my_scraper',
    'drf_yasg',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = my_env.ROOT_URLCONF

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'metaafzar.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
# # Uncomment and configure the following for production database settings
# if my_env.ENVIRONMENT == 'production':
#     DATABASES = {
#         'default': {
#             'ENGINE': my_env.DATABASE_ENGINE,
#             'NAME': my_env.DATABASE_NAME,
#             'USER': my_env.DATABASE_USER,
#             'PASSWORD': my_env.DATABASE_PASSWORD,
#             'HOST': my_env.DATABASE_HOST,
#             'PORT': my_env.DATABASE_PORT,
#         }
#     }

if my_env.DATABASE_ENGINE == 'django.db.backends.sqlite3':
    DATABASES = {
        'default': {
            'ENGINE': my_env.DATABASE_ENGINE,
            'NAME': BASE_DIR / my_env.DATABASE_NAME,
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': my_env.DATABASE_ENGINE,
            'NAME': my_env.DATABASE_NAME,
            'USER': my_env.DATABASE_USER,
            'PASSWORD': my_env.DATABASE_PASSWORD,
            'HOST': my_env.DATABASE_HOST,
            'PORT': my_env.DATABASE_PORT,
        }
    }

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators
AUTH_USER_MODEL = 'my_scraper.User'

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

CSRF_TRUSTED_ORIGINS = [
    'https://metaafzar.bytecraft.ir',
]

CORS_ALLOWED_ORIGINS = [
    'https://metaafzar.bytecraft.ir',
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
